{"data":{"site":{"siteMetadata":{"title":"kkdev163 ' Blog","author":"kk"}},"markdownRemark":{"id":"73bd227d-d7d8-55c6-9f6e-2b0973fb1855","excerpt":"前言 本文首先介绍了网易云音乐私有化部署的Sentry平台系统架构和当前业务上遇到的分布式存储问题，最后给出搭建SSHFS存储环境解决该问题的实现步骤。 Sentry架构 \n\b当前Sentry平台的部署采用了三台宿主机构成的Docker Swarm集群。Docker容器内运行的WSGI…","html":"<h3>前言</h3>\n<p>本文首先介绍了网易云音乐私有化部署的Sentry平台系统架构和当前业务上遇到的分布式存储问题，最后给出搭建SSHFS存储环境解决该问题的实现步骤。</p>\n<h3>Sentry架构</h3>\n<p><img src=\"https://p1.music.126.net/khgxZ3hwssENM7Y8gJ--1Q==/109951163959632735.png\" alt=\"image\">\n\b当前Sentry平台的部署采用了三台宿主机构成的Docker Swarm集群。Docker容器内运行的WSGI可理解为错误事件的生产者进程, Redis理解为消息队列，Celery worker为错误事件的消费进程。</p>\n<h3>遇到的问题</h3>\n<p>Sentry平台提供根据SourceMap解析混淆代码的能力, 比如原始收集到的错误如下：\n<img src=\"https://p1.music.126.net/c5ZHOyvdcvZnAD1eAuaqcA==/109951163895796415.jpg\" alt=\"image\">\n通过SourceMap解析后：\n<img src=\"https://p1.music.126.net/lLtnyXr7IJ6Yj_NZXRrKkw==/109951163895799468.png\" alt=\"image\">\n为了保证源代码的安全，sentry提供了<a href=\"https://docs.sentry.io/platforms/node/sourcemaps/\">Webpack插件</a>，可将打包后的js文件及sourceMap文件提前上传至Sentry后台，在后续收到错误上报时直接从文件系统中读取js及map文件。</p>\n<p>Sentry提供了一层filestore抽象配置，用于文件的存储。默认配置下，是写本地磁盘，官网是不建议在生产环境使用的。除此之外Sentry还提供了Google Cloud Storage、Amazon S3 Backend的配置，类似于网易的NOS存储服务。</p>\n<h4>直接写本地磁盘会遇到的问题？</h4>\n<p>如下图所示意：当进行文件上传时，Nginx会随机负载到一台机器上，如宿主机A。</p>\n<p><img src=\"https://p1.music.126.net/eRzeeTxkCi0R5km0NaCTMA==/109951163894174028.png\" alt=\"image\"></p>\n<p>当前端产生错误上报时，请求可能会是由宿主机C上的消费容器进行处理。消费进程尝试从文件系统中读取js及map文件，由于无法读取到，此次解析就会失败，展示的还是混淆后的代码。</p>\n<p><img src=\"https://p1.music.126.net/txq_IEYwOJsWv78B7gRpFw==/109951163894172228.png\" alt=\"image\"></p>\n<p>网上有通过NFS来让跨主机的Docker集群进行文件共享的<a href=\"https://www.jianshu.com/p/0d59bc614baa?utm_source=oschina-app\">方案</a>，示意图如下：\n<img src=\"https://p1.music.126.net/YTdUvXsEA4xdTnnS8fu01g==/109951163894176686.png\" alt=\"image\">\n搭建前想找PE同事讨论下能否可以协助搭建，还有方案潜在的风险，PE评估后觉得NFS的方案比较老，不太稳定，不建议去使用。</p>\n<p>与同事们讨论后可能的解决方案有：</p>\n<ul>\n<li>\n<p>方案一: 将三台云主机迁移至 单台物理机上，但是存在单点的问题，并且后续无法扩展。(这可能是最快的方案)。</p>\n</li>\n<li>\n<p>方案二: sentry提供了亚马逊s3及谷歌云存储的配置，可以参考这两个存储的<a href=\"https://github.com/getsentry/sentry/tree/master/src/sentry/filestore\">实现</a>，扩展一个NOS的实现。</p>\n</li>\n<li>\n<p>方案三: 搭建SSHFS存储方案。</p>\n</li>\n</ul>\n<p>最终评估后，我们采取了SSHFS的解决方案。下文对该方案的环境搭建做介绍。</p>\n<h3>SSHFS</h3>\n<h4>首先提供最权威的搭建参考文档：</h4>\n<ul>\n<li><a href=\"https://docs.docker.com/storage/volumes/#use-a-volume-driver\">Docker volume driver文档</a></li>\n<li><a href=\"https://github.com/vieux/docker-volume-sshfs\">docker-volume-sshfs</a></li>\n</ul>\n<h4>搭建后的存储示意图：</h4>\n<p><img src=\"https://p1.music.126.net/R5-6tL4aQ6Yl34TwistODw==/109951163959706351.png\" alt=\"image\"></p>\n<h4>搭建步骤：</h4>\n<ol>\n<li>\n<p>三台机器建立ssh互访</p>\n<ul>\n<li>申请一个互访的公共账号</li>\n<li>本地创建公私钥对, 可由sa协助将公私钥添加至三台机器</li>\n<li>验证3台机器可任意进行ssh免密互访</li>\n</ul>\n</li>\n<li>\n<p>安装插件\n每台机器都需要安装</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$docker plugin install vieux/sshfs sshkey.source=/home/sentry/.ssh/</code></pre></div>\n</li>\n<li>\n<p>创建数据卷\n每台机器都需要安装</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$docker volume create -d vieux/sshfs -o sshcmd=sentry@hzabj-music-xxxx-machine3:/home/sentry/data \n-o port=1046 -o uid=999,gid=999 -o allow_other sshvolume</code></pre></div>\n<p>其中uid=999,gid=999 为Sentry的Docker镜像内用户id, 需要登录Sentry容器内检查是否一致，若不一致则修改为Sentry容器内的uid.</p>\n</li>\n<li>\n<p>测试\n在machine1上运行</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$docker run -it --rm  -v sshvolume:/tmp:nocopy sentrybox /bin/bash\n$touch testfile</code></pre></div>\n<p>以上我们在/tmp文件夹加下创建了testfile，不出意外的话，在machine3的/home/sentry/data文件夹内会同步出现该文件，验证文件共享成功。</p>\n</li>\n<li>\n<p>申请一块额外的硬盘，将该硬盘作为共享的数据存储盘\n例如申请的新硬盘挂载在 /srv/nbs/0/目录下，则</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$cd /srv/nbs/0/\n$mkdir -p ./home/sentry/data\n$mount --bind ./home/sentry/data /home/sentry/data/</code></pre></div>\n<p>进行此操作后，/home/sentry/data/文件夹下的文件会存入新的硬盘。而/home/sentry/data/目录，为我们在第二步创建数据卷时指定的共享目录。经过以上配置，三台机器挂载sshvolume后存入的文件，都会落入新的硬盘，达到文件共享的目的。</p>\n</li>\n<li>\n<p>在Docker Swarm集群中使用\n需要在docker-compose.yml文件内配置sshfsvolume, 具体使用可参考以下配置:\n<img src=\"https://p1.music.126.net/ZJd6j-m2_VAF0mgCy_SKCw==/109951163959774896.png\" alt=\"image\"></p>\n</li>\n</ol>\n<p>需要注意的是若修改docker-compose.yml后，直接deploy失败的话，需要先执行 docker stack rm 将已有service移除</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$docker stack rm xxx </code></pre></div>\n<p>再执行一次</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$docker stack deploy </code></pre></div>\n<p>至此为Docker swarm集群添加sshfs文件共享存储环境搭建完成。</p>\n<h3>参考资料</h3>\n<p>根据官网权威文档进行操作时，遇到了一些坑，解决遇到问题的参考的文献如下：</p>\n<h4>solution</h4>\n<p><a href=\"https://github.com/vieux/docker-volume-sshfs\">https://github.com/vieux/docker-volume-sshfs</a></p>\n<p><a href=\"https://docs.docker.com/storage/volumes/#use-a-volume-driver\">https://docs.docker.com/storage/volumes/#use-a-volume-driver</a></p>\n<h4>ssh [public_key]</h4>\n<p><a href=\"https://blog.csdn.net/li528405176/article/details/82810342\">https://blog.csdn.net/li528405176/article/details/82810342</a></p>\n<p><a href=\"https://blog.csdn.net/rabit87/article/details/79705163\">https://blog.csdn.net/rabit87/article/details/79705163</a></p>\n<p><a href=\"https://blog.csdn.net/zyf2333/article/details/80373502\">https://blog.csdn.net/zyf2333/article/details/80373502</a></p>\n<p><a href=\"https://www.linuxquestions.org/questions/linux-software-2/sshfs-how-to-find-out-cause-of-read-connection-reset-by-peer-message-4175614683/\">https://www.linuxquestions.org/questions/linux-software-2/sshfs-how-to-find-out-cause-of-read-connection-reset-by-peer-message-4175614683/</a></p>\n<h4>chown permission deied [nocopy]</h4>\n<p><a href=\"https://github.com/vieux/docker-volume-sshfs/issues/41\">https://github.com/vieux/docker-volume-sshfs/issues/41</a></p>\n<p><a href=\"https://github.com/docker/docker.github.io/issues/2992\">https://github.com/docker/docker.github.io/issues/2992</a></p>\n<p><a href=\"https://docs.docker.com/engine/reference/run/\">https://docs.docker.com/engine/reference/run/</a></p>\n<h4>permission [allow_other]</h4>\n<p><a href=\"https://unix.stackexchange.com/questions/146544/chown-permission-denied-on-owned-dir\">https://unix.stackexchange.com/questions/146544/chown-permission-denied-on-owned-dir</a></p>\n<p><a href=\"https://ubuntuforums.org/showthread.php?t=1961204\">https://ubuntuforums.org/showthread.php?t=1961204</a></p>\n<p><a href=\"https://unix.stackexchange.com/questions/37168/unable-to-use-o-allow-other-with-sshfs-option-enabled-in-fuse-conf\">https://unix.stackexchange.com/questions/37168/unable-to-use-o-allow-other-with-sshfs-option-enabled-in-fuse-conf</a></p>\n<p><a href=\"https://unix.stackexchange.com/questions/222944/mount-with-sshfs-and-write-file-permissions\">https://unix.stackexchange.com/questions/222944/mount-with-sshfs-and-write-file-permissions</a></p>\n<p><a href=\"https://github.com/docker/for-win/issues/497\">https://github.com/docker/for-win/issues/497</a></p>\n<p><a href=\"https://forums.docker.com/t/volume-not-writable-to-non-root-user-container/36103/3\">https://forums.docker.com/t/volume-not-writable-to-non-root-user-container/36103/3</a></p>\n<p><a href=\"https://ubuntuforums.org/showthread.php?t=2036686\">https://ubuntuforums.org/showthread.php?t=2036686</a></p>\n<h4>compose [syntax]</h4>\n<p><a href=\"https://github.com/vieux/docker-volume-sshfs/issues/48\">https://github.com/vieux/docker-volume-sshfs/issues/48</a></p>\n<p><a href=\"https://github.com/vieux/docker-volume-sshfs/issues/65\">https://github.com/vieux/docker-volume-sshfs/issues/65</a></p>\n<p><a href=\"https://github.com/getsentry/docker-sentry/blob/master/9.0/Dockerfile\">https://github.com/getsentry/docker-sentry/blob/master/9.0/Dockerfile</a></p>","frontmatter":{"title":"Sentry平台-为Docker Swarm集群添加SSHFS分布式文件存储","date":"March 28, 2019","description":"本文首先介绍了网易云音乐私有化部署的Sentry平台系统架构和当前业务上遇到的分布式存储问题，最后给出搭建SSHFS存储环境解决该问题的实现步骤。"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/sshfs/","previous":null,"next":{"fields":{"slug":"/apm-storage/"},"frontmatter":{"title":"前端性能监控平台-存储与计算架构展望"}}}}